name: Validate Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'Makefile'
      - 'docker-compose.yml'
      - 'pyproject.toml'
      - 'docker/**'
      - 'parkflow_cli/**'
      - '.github/workflows/validate-infra.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Makefile'
      - 'docker-compose.yml'
      - 'pyproject.toml'
      - 'docker/**'
      - 'parkflow_cli/**'
      - '.github/workflows/validate-infra.yml'

jobs:
  validate:
    name: Validate Infrastructure Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      PYTHON_VERSION: '3.11'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: |
          # Install system dependencies first
          sudo apt-get update
          sudo apt-get install -y kafkacat jq
          # Install Python dependencies
          make install

      - name: Start Infrastructure
        run: |
          docker compose pull
          make start
          sleep 10  # Give services time to start
          make status

      - name: Validate Infrastructure
        run: |
          make validate || {
            echo "::group::Infrastructure Logs"
            make logs
            echo "::endgroup::"
            exit 1
          }

      - name: Test CLI
        run: |
          make cli || {
            echo "::group::CLI Test Logs"
            make logs
            echo "::endgroup::"
            exit 1
          }

      - name: Simulate Events
        run: |
          make simulate EVENTS=5 DELAY=100 || {
            echo "::group::Simulation Logs"
            make logs
            echo "::endgroup::"
            exit 1
          }
          sleep 2

      - name: Check Logs
        if: always()
        run: make logs

      - name: Cleanup
        if: always()
        run: |
          make clean
          docker compose down -v

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy for docker-compose
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: 'docker-compose.yml'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
